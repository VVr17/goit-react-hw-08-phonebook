{"version":3,"file":"static/js/734.435b0bb0.chunk.js","mappings":"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","sources":["components/Eye/Eye.styled.js","components/Eye/Eye.jsx","components/Input/Input.styled.js","components/Input/Input.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const InputIcon = styled.div`\n  margin: 0;\n  padding: 0;\n  border: none;\n  font-size: 0;\n  width: 0;\n  height: 0;\n  cursor: pointer;\n  background-color: transparent;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.colors.secondaryColor};\n  outline: none;\n\n  svg {\n    position: absolute;\n    top: 29px;\n    right: 12px;\n    width: 20px;\n    height: 20px;\n    fill: ${p => p.theme.colors.mainText};\n  }\n\n  :hover svg,\n  :focus svg {\n    fill: ${p => p.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FaEyeSlash, FaEye } from 'react-icons/fa';\nimport { InputIcon } from './Eye.styled';\n\nexport const Eye = ({ onClick, isVisible }) => (\n  <InputIcon onClick={onClick}>\n    {isVisible ? <FaEye /> : <FaEyeSlash />}\n  </InputIcon>\n);\n\nEye.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: start;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeight.semiBold};\n  text-transform: capitalize;\n\n  :last-of-type {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const InputStyled = styled.input`\n  margin-top: ${p => p.theme.space[1]}px;\n  padding: ${p => p.theme.space[2]}px;\n  outline: transparent;\n  background-color: ${p =>\n    p.theme.colors[p.backgroundColor] || p.theme.colors.white};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors[p.border]};\n  border-radius: ${p => p.theme.space[1]}px;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    border-color: ${p => p.theme.colors.secondaryColor};\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: ${p => p.theme.colors.red};\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: lowercase;\n`;\n","import { Eye } from 'components/Eye/Eye';\nimport PropTypes from 'prop-types';\nimport { LabelStyled, ErrorText, InputStyled } from './Input.styled';\nimport { useState } from 'react';\n\nexport const Input = ({\n  type = 'text',\n  name,\n  placeholder,\n  register,\n  error,\n}) => {\n  const [inputType, setInputType] = useState(type);\n\n  const toggleInputType = event => {\n    // event.preventDefault();\n    inputType === 'password' ? setInputType('text') : setInputType('password');\n  };\n\n  return (\n    <LabelStyled>\n      {name}\n      <InputStyled\n        type={inputType}\n        placeholder={placeholder}\n        {...register(name, { required: true })}\n        aria-invalid={error ? 'true' : 'false'}\n        border={error ? 'red' : 'inputText'}\n        backgroundColor={error ? 'bgErrorColor' : ''}\n      />\n      {error && <ErrorText>{error?.message}</ErrorText>}\n      {type === 'password' && (\n        <Eye onClick={toggleInputType} isVisible={inputType !== 'password'} />\n      )}\n    </LabelStyled>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  error: PropTypes.object,\n  register: PropTypes.func,\n};\n\n//<input type=\"text\" {...register('name'), {\n//    required: 'Name is required',\n//    minLength: {\n//      value: 4,\n//      message: 'Name should be at least 4 characters',\n//    },\n//    maxLength: {\n//      value: 20,\n//      message: 'Name should be at most 40 characters',\n//    },\n// }} />\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.18;\n  letter-spacing: 0.05em;\n  color: ${p => p.theme.colors.accentTextColor};\n  text-align: center;\n\n  ${p => p.theme.mediaQueries.medium} {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n\n  ${p => p.theme.mediaQueries.large} {\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box/Box';\nimport { Title } from './Section.styled';\nimport { theme } from 'constants/theme';\n\nexport const Section = ({ title, children }) => (\n  <Box as=\"section\" px={[2, 2, 4, 6]} py={[2, 3, 4, 4]}>\n    <Box\n      mx=\"auto\"\n      py={[3, 3, 4, 4]}\n      px={[3, 3, 4, 4]}\n      bg=\"white\"\n      boxShadow={theme.boxShadow.second}\n      borderRadius={theme.radii.normal}\n      maxWidth={['100%', '100%', '768px', '900px']}\n      textAlign=\"center\"\n    >\n      {title && <Title>{title}</Title>}\n      {children}\n    </Box>\n  </Box>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useForm } from 'react-hook-form'; // Forms\nimport { useDispatch } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup'; // for React-hook-form work with Yup\nimport * as yup from 'yup'; // Form validation\nimport { Button } from 'components/Button/Button';\nimport { Box } from 'components/Box/Box';\nimport { Input } from 'components/Input/Input';\nimport { userLogin } from 'redux/auth/authOperations';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  email: yup.string().required('Email is required'),\n  password: yup.string().required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: { ...INITIAL_STATE },\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = data => {\n    dispatch(userLogin(data));\n    reset();\n  };\n\n  return (\n    <Box as=\"form\" textAlign=\"center\" onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"E-mail\"\n        register={register}\n        error={errors.email}\n      />\n      <Input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        register={register}\n        error={errors.password}\n      />\n\n      <Button type=\"submit\" name=\"primary\">\n        Login\n      </Button>\n    </Box>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Section } from 'components/Section/Section';\n\nconst Login = () => {\n  return (\n    <Section title=\"Login\">\n      <LoginForm />\n    </Section>\n  );\n};\nexport default Login;\n"],"names":["InputIcon","styled","p","theme","colors","secondaryColor","mainText","accent","Eye","onClick","isVisible","LabelStyled","space","fontSizes","s","fontWeight","semiBold","InputStyled","backgroundColor","white","borders","normal","border","ErrorText","red","xs","Input","type","name","placeholder","register","error","useState","inputType","setInputType","required","message","event","Title","bold","accentTextColor","mediaQueries","medium","m","large","l","Section","title","children","Box","as","px","py","mx","bg","boxShadow","borderRadius","maxWidth","textAlign","INITIAL_STATE","email","password","validationSchema","yup","shape","LoginForm","dispatch","useDispatch","useForm","defaultValues","resolver","yupResolver","handleSubmit","reset","errors","formState","onSubmit","data","userLogin","I","Button"],"sourceRoot":""}